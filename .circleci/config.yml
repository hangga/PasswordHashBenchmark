version: 2.1

executors:
  linux-java:
    parameters:
      java-version:
        type: string
    docker:
      - image: cimg/openjdk:<< parameters.java-version >>

  macos-java:
    parameters:
      java-version:
        type: string
    macos:
      xcode: "14.2.0"

  windows-java:
    parameters:
      java-version:
        type: string
    machine:
      resource_class: windows.medium

jobs:
  test-java:
    parameters:
      java-version:
        type: string
    executor:
      name: linux-java
      java-version: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Tests
          command: ./gradlew check
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports

  benchmark-linux:
    parameters:
      java-version:
        type: string
    executor:
      name: linux-java
      java-version: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Run JMH Benchmark on Linux
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

  benchmark-macos:
    parameters:
      java-version:
        type: string
    executor:
      name: macos-java
      java-version: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Install Java on macOS
          command: |
            brew install openjdk@<< parameters.java-version >>
            sudo ln -sfn /opt/homebrew/opt/openjdk@<< parameters.java-version >>/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-<< parameters.java-version >>.jdk
            echo 'export JAVA_HOME=/opt/homebrew/opt/openjdk@<< parameters.java-version >>' >> $BASH_ENV
      - run:
          name: Run JMH Benchmark on macOS
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

  benchmark-windows:
    parameters:
      java-version:
        type: string
    executor:
      name: windows-java
      java-version: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Install Java on Windows
          command: |
            choco install openjdk<< parameters.java-version >>
            setx JAVA_HOME "C:\Program Files\OpenJDK\openjdk-<< parameters.java-version >>"
      - run:
          name: Run JMH Benchmark on Windows
          command: ./gradlew.bat jmh
      - store_artifacts:
          path: build/reports

workflows:
  build-and-test:
    jobs:
      - test-java:
          matrix:
            parameters:
              java-version: ["11.0", "17.0", "21.0"]
      - benchmark-linux:
          matrix:
            parameters:
              java-version: ["11.0", "17.0", "21.0"]
      - benchmark-macos:
          matrix:
            parameters:
              java-version: ["11", "17", "21"]
      - benchmark-windows:
          matrix:
            parameters:
              java-version: ["11", "17", "21"]