version: 2.1

parameters:
  java_version:
    type: string
    default: "17.0"
  docker_image:
    type: string
    default: "cimg/openjdk:17.0"

executors:
  java_executor:
    parameters:
      docker_image:
        type: string
    docker:
      - image: << parameters.docker_image >>

jobs:
  test-java:
    parameters:
      java_version:
        type: string
      docker_image:
        type: string
    executor:
      name: java_executor
      docker_image: << parameters.docker_image >>
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
              sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew check
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports

  benchmark-jmh:
    parameters:
      java_version:
        type: string
      docker_image:
        type: string
    executor:
      name: java_executor
      docker_image: << parameters.docker_image >>
    steps:
      - checkout
      - run:
          name: Run JMH Benchmark
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

workflows:
  build-and-test:
    matrix:
      parameters:
        java_version: ["8.0", "11.0", "17.0", "21.0"]
        docker_image:
          [
            "cimg/openjdk:8.0",
            "cimg/openjdk:11.0",
            "cimg/openjdk:17.0",
            "cimg/openjdk:21.0"
          ]
    jobs:
      - test-java:
          java_version: << matrix.java_version >>
          docker_image: << matrix.docker_image >>
      - benchmark-jmh:
          java_version: << matrix.java_version >>
          docker_image: << matrix.docker_image >>
