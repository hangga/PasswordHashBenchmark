# This config was automatically generated from your source code
# Stacks detected: deps:java:.,tool:gradle:
version: 2.1

jobs:
  test-java:
    parameters:
      java-version:
        type: string
      os-image:
        type: string
    docker:
      - image: << parameters.os-image >>
    environment:
      JAVA_VERSION: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Setup Java << parameters.java-version >>
          command: |
            sudo apt-get update
            sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk${JAVA_VERSION}/GPL/openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz
            sudo tar xzvf openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz -C /usr/local/
            export JAVA_HOME=/usr/local/jdk-${JAVA_VERSION}
            export PATH=$JAVA_HOME/bin:$PATH
      - run:
          name: Calculate cache key
          command: |
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}-<< parameters.java-version >>-<< parameters.os-image >>
      - run:
          name: Run tests with Java << parameters.java-version >>
          command: ./gradlew check
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}-<< parameters.java-version >>-<< parameters.os-image >>
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports

  benchmark-jmh:
    parameters:
      java-version:
        type: string
      os-image:
        type: string
    docker:
      - image: << parameters.os-image >>
    environment:
      JAVA_VERSION: << parameters.java-version >>
    steps:
      - checkout
      - run:
          name: Setup Java << parameters.java-version >>
          command: |
            sudo apt-get update
            sudo apt-get install -y wget
            wget https://download.java.net/java/GA/jdk${JAVA_VERSION}/GPL/openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz
            sudo tar xzvf openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz -C /usr/local/
            export JAVA_HOME=/usr/local/jdk-${JAVA_VERSION}
            export PATH=$JAVA_HOME/bin:$PATH
      - run:
          name: Run JMH Benchmark with Java << parameters.java-version >>
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

workflows:
  build-and-test:
    jobs:
      - test-java:
          name: "Test Java << matrix.java-version >> on << matrix.os-image >>"
          matrix:
            parameters:
              java-version: ["11", "17", "21"]
              os-image:
                - "cimg/base:2024.01-ubuntu"
                - "cimg/base:2024.01-debian"
                # Windows and Mac require machine executor which has different syntax
          exclude:
            # Exclude combinations that don't make sense or aren't supported
            - java-version: "21"
              os-image: "cimg/base:2024.01-debian"  # Example exclusion
      - benchmark-jmh:
          name: "Benchmark Java << matrix.java-version >> on << matrix.os-image >>"
          matrix:
            parameters:
              java-version: ["11", "17"]
              os-image: ["cimg/base:2024.01-ubuntu"]
          requires:
            - "Test Java 11 on cimg/base:2024.01-ubuntu"  # Example dependency