# This config was automatically generated from your source code
# Stacks detected: deps:java:.,tool:gradle:
version: 2.1

# Parameters section for reusable values
parameters:
  java-version:
    type: string
    default: "17"  # Default java version used for test-java
  os-type:
    type: string
    default: "ubuntu"  # Default OS for benchmark jobs

# Define the executor for Java jobs with dynamic java version
executors:
  docker-java:
    parameters:
      java-version:
        type: string
    docker:
      - image: cimg/openjdk:<<parameters.java-version>>
    working_directory: ~/project

  windows:
    machine:
      image: windows-server-2022-gui
    shell: powershell.exe

  macos:
    macos:
      xcode: "14.3.1"

# Define the jobs for testing and benchmarking
jobs:
  test-java:
    parameters:
      java-version:
        type: string
    executor: docker-java
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
              sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run: ./gradlew check
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports

  benchmark-jmh-docker:
    parameters:
      java-version:
        type: string
    executor: docker-java
    steps:
      - checkout
      - run:
          name: Run JMH Benchmark
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

  benchmark-jmh-windows:
    parameters:
      java-version:
        type: string
    executor: windows
    steps:
      - checkout
      - run:
          name: Run JMH Benchmark on Windows
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

  benchmark-jmh-macos:
    parameters:
      java-version:
        type: string
    executor: macos
    steps:
      - checkout
      - run:
          name: Run JMH Benchmark on macOS
          command: ./gradlew jmh
      - store_artifacts:
          path: build/reports

# Define the workflow
workflows:
  build-and-test:
    jobs:
      - test-java:
          java-version: "17"  # Explicitly provide java-version for test-java job
      - benchmark-jmh-docker:
          matrix:
            parameters:
              java-version: ["8", "11", "17", "21"]  # Running benchmarks with multiple Java versions
              os-type: ["docker-java"]
      - benchmark-jmh-windows:
          matrix:
            parameters:
              java-version: ["8", "11", "17", "21"]
              os-type: ["windows"]
      - benchmark-jmh-macos:
          matrix:
            parameters:
              java-version: ["8", "11", "17", "21"]
              os-type: ["macos"]